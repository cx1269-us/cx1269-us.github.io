<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ESP8266连接Onenet</title>
    <link href="/2024/05/13/ESP8266%E8%BF%9E%E6%8E%A5Onenet/"/>
    <url>/2024/05/13/ESP8266%E8%BF%9E%E6%8E%A5Onenet/</url>
    
    <content type="html"><![CDATA[<h2 id="1-下载固件"><a href="#1-下载固件" class="headerlink" title="1.下载固件"></a>1.下载固件</h2><p>如果要使用AT指令 和MQTT协议，需要注意固件版本。使用下图软件下载。</p><p><img src="/../imgs/$%7Bfiilename%7D/%E4%B8%8B%E8%BD%BD%E4%BA%8B%E9%A1%B9-1715609858599-4-1715609863956-6-1715609869250-8.jpg" alt="下载事项"></p><h2 id="2-设置onenet"><a href="#2-设置onenet" class="headerlink" title="2.设置onenet"></a>2.设置onenet</h2><p>按照流程创建项目，注意项目关键字，项目ID 等</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c">设备名称：MQTT_TEST<br>产品ID：HnL6N2nQG6<br>Password：version=<span class="hljs-number">2018</span><span class="hljs-number">-10</span><span class="hljs-number">-31</span>&amp;res=products%<span class="hljs-number">2F</span>HnL6N2nQG6%<span class="hljs-number">2F</span>devices%<span class="hljs-number">2F</span>MQTT_TEST&amp;et=<span class="hljs-number">1778589863</span>&amp;method=md5&amp;sign=<span class="hljs-number">7</span>mOkK9iq1%<span class="hljs-number">2F</span>2DNi1blr8Atw%<span class="hljs-number">3</span>D%<span class="hljs-number">3</span>D<br>url:mqtts.heclouds.com<br>端口号：<span class="hljs-number">1883</span><br>订阅：$sys/HnL6N2nQG6/MQTT_TEST/thing/property/post/reply<br>发布：$sys/HnL6N2nQG6/MQTT_TEST/thing/property/post<br>设备密钥：T1NFcFpHWXVWMjRnOVBUN1hDMjBXV1Rxc21XeDJYT1U=<br>acccess key:+dt1wc3nB7cX32f9M/<span class="hljs-number">8f</span>AeMTtX9Z7zMlS/V162Vj8z8=<br>res:products/F1AVyfXw7I/devices/test<br>et:<span class="hljs-number">1778589863</span><br>    <br>OneNet云平台：open.iot<span class="hljs-number">.10086</span>.cn<br>时间戳：https:<span class="hljs-comment">//www.beijing-time.org/shijianchuo/</span><br>OneNet文档中心：https:<span class="hljs-comment">//open.iot.10086.cn/doc/v5/develop/detail/639</span><br></code></pre></td></tr></table></figure><h2 id="3-使用XCOM软件进行设置"><a href="#3-使用XCOM软件进行设置" class="headerlink" title="3.使用XCOM软件进行设置"></a>3.使用XCOM软件进行设置</h2><ol><li><p>AT  &#x2F;&#x2F;测试指令</p></li><li><p>AT+RST  &#x2F;&#x2F;复位指令</p></li><li><p>AT+CWMODE&#x3D;1  &#x2F;&#x2F;设置为station模式</p></li><li><p>AT+CWDHCP&#x3D;1,1  &#x2F;&#x2F;启动DHCP</p></li><li><p>AT+CWJAP&#x3D;”PCDN”,”1234567890”</p></li><li><p>AT+MQTTUSERCFG&#x3D;0,1,”MQTT_TEST”,”HnL6N2nQG6”,”version&#x3D;2018-10-31&amp;res&#x3D;products%2FHnL6N2nQG6%2Fdevices%2FMQTT_TEST&amp;et&#x3D;2999709119&amp;method&#x3D;md5&amp;sign&#x3D;QEYaWHgGA8K%2FpCKFL5pv0Q%3D%3D”,0,0,””</p></li><li><p>AT+MQTTCONN&#x3D;0,”mqtts.heclouds.com”,1883,1</p></li><li><p>AT+MQTTSUB&#x3D;0,”$sys&#x2F;HnL6N2nQG6&#x2F;MQTT_TEST&#x2F;thing&#x2F;property&#x2F;post&#x2F;reply”,1</p></li><li><p>AT+MQTTPUB&#x3D;0,”$sys&#x2F;HnL6N2nQG6&#x2F;MQTT_TEST&#x2F;thing&#x2F;property&#x2F;post”,”{&quot;id&quot;:&quot;123&quot;,&quot;params&quot;:{&quot;temp&quot;:{&quot;value&quot;:23.6}}}”,0,0</p><h2 id="4-查看是否上传成功"><a href="#4-查看是否上传成功" class="headerlink" title="4.查看是否上传成功"></a>4.查看是否上传成功</h2></li></ol><p><img src="/../imgs/$%7Bfiilename%7D/image-20240513223122465-1715610747195-10.png"></p><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>用到的软件：</p><p>烧写固件：flash_download_tool_3.9.4</p><p>固件：（1471）ESP8266-AT_MQTT-1M.bin</p><p>串手工具：XCOM</p><h2 id="后续-STM32F103采集温湿度和光照，上传到Onenet"><a href="#后续-STM32F103采集温湿度和光照，上传到Onenet" class="headerlink" title="后续-STM32F103采集温湿度和光照，上传到Onenet"></a>后续-STM32F103采集温湿度和光照，上传到Onenet</h2><p>l 基础功能：DHT11监测环境温度湿度，光敏电阻模块监测当前光照强度，并且将这些数据都显示在OLED屏幕上。</p><p>l 拓展功能：通过蓝牙模块实现远程监测数据的功能，设置温度阈值当到达特定温度阈值时，电机打开进行降温操作，当温度低于阈值时，电机关闭。</p><p>l 进阶功能：使用ADC多通道采样，同时采样MQ135数据和ADC数据，使用按键达到手动控制风扇的功能。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>模电-三级管</title>
    <link href="/2024/05/13/%E6%A8%A1%E7%94%B5-%E4%B8%89%E7%BA%A7%E7%AE%A1/"/>
    <url>/2024/05/13/%E6%A8%A1%E7%94%B5-%E4%B8%89%E7%BA%A7%E7%AE%A1/</url>
    
    <content type="html"><![CDATA[<p><img src="/imgs/$%7Bfiilename%7D/%E4%B8%89%E7%BA%A7%E7%AE%A1.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>博途_定时器</title>
    <link href="/2024/05/13/%E5%8D%9A%E9%80%94-%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
    <url>/2024/05/13/%E5%8D%9A%E9%80%94-%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>类</title>
    <link href="/2024/03/23/%E7%B1%BB/"/>
    <url>/2024/03/23/%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="一、”类”-的介绍"><a href="#一、”类”-的介绍" class="headerlink" title="一、”类” 的介绍"></a><strong>一、”类” 的介绍</strong></h2><p><strong>对象</strong>：对象是对现实世界中的事物或概念的抽象表示。在C++中，对象是由类创建的实体。对象包含数据（属性或成员变量）和对这些数据进行操作的方法（成员函数）。</p><p><strong>实例</strong>：实例是类的具体对象。当你使用类的构造函数创建一个对象时，你就创建了一个类的实例。每个实例都有其自己的数据成员（即属性）和可以调用其成员函数（即方法）。</p><p><strong>属性</strong>：属性是对象的特性或状态，它们存储对象的数据。在C++中，这些通常被称为成员变量或数据成员。</p><p><strong>方法</strong>：方法是对象可以执行的操作或行为。在C++中，这些被称为成员函数。它们通常用于修改对象的属性或基于对象的属性执行某些计算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">1.</span>      类的声明<br><br><span class="hljs-keyword">class</span> 类名称<br>&#123;<br><span class="hljs-keyword">public</span>:<br>     公有成员（外部接口）<br><span class="hljs-keyword">private</span>:<br>     私有成员 （只允许本类中的函数访问，而类外部的任何函数都不能访问）<br><span class="hljs-keyword">protected</span>:<br>     保护成员（与<span class="hljs-keyword">private</span>类似，差别表现在继承与派生时）<br>&#125;;<br><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs CPP"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Test</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-type">int</span> x_;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y,<span class="hljs-type">int</span> z)</span></span>;<br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">display</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        cout&lt;&lt; x_ &lt;&lt; endl;<br>    &#125;;<br><span class="hljs-keyword">private</span>:<br>    <span class="hljs-type">int</span> y_;<br><span class="hljs-keyword">protected</span>:<br>    <span class="hljs-type">int</span> z_;<br>&#125;;<br> <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Test::init</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y, <span class="hljs-type">int</span> z)</span></span><br><span class="hljs-function"></span>&#123;<br>    x_ = x;<br>    y_ = y;<br>    z_ = z;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    Test t;<br>    t.<span class="hljs-built_in">init</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>);<br>    t.<span class="hljs-built_in">display</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span> &#123;  <br><span class="hljs-keyword">private</span>:  <br>    std::string color;  <br>    std::string make;  <br>    std::string model;  <br>    <span class="hljs-type">int</span> year;  <br>  <br><span class="hljs-keyword">public</span>:  <br>    <span class="hljs-comment">// 构造函数  </span><br>    <span class="hljs-built_in">Car</span>(std::string c, std::string m, std::string mod, <span class="hljs-type">int</span> y) : <span class="hljs-built_in">color</span>(c), <span class="hljs-built_in">make</span>(m), <span class="hljs-built_in">model</span>(mod), <span class="hljs-built_in">year</span>(y) &#123;&#125;  <br>  <br>    <span class="hljs-comment">// 方法  </span><br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">start</span><span class="hljs-params">()</span> </span>&#123;  <br>        <span class="hljs-comment">// 实现启动汽车的逻辑  </span><br>    &#125;  <br>  <br>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">stop</span><span class="hljs-params">()</span> </span>&#123;  <br>        <span class="hljs-comment">// 实现停止汽车的逻辑  </span><br>    &#125;  <br>  <br>    <span class="hljs-comment">// ... 其他方法和属性 ...  </span><br>&#125;;  <br>  <br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;  <br>    <span class="hljs-comment">// 创建Car类的一个实例  </span><br>    <span class="hljs-function">Car <span class="hljs-title">myCar</span><span class="hljs-params">(<span class="hljs-string">&quot;Red&quot;</span>, <span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>, <span class="hljs-number">2020</span>)</span></span>;  <br>      <br>    <span class="hljs-comment">// 使用myCar的方法  </span><br>    myCar.<span class="hljs-built_in">start</span>();  <br>    <span class="hljs-comment">// ... 其他操作 ...  </span><br>    myCar.<span class="hljs-built_in">stop</span>();  <br>  <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;  <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux系统编程01</title>
    <link href="/2023/05/05/Linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B01/"/>
    <url>/2023/05/05/Linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B01/</url>
    
    <content type="html"><![CDATA[<p>程序：源代码，指令</p><p>进程：运行的程序的实例化</p><p>线程： 由进程引发的，线程属于进程，一个进程可以有多个线程，线程之间共享之间进程的资源</p><p>任务：具体要做的事情， </p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">man getpid</span><br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">#in</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NAS</title>
    <link href="/2023/05/03/NAS/"/>
    <url>/2023/05/03/NAS/</url>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: 时钟<br>date: 2023<span class="hljs-string">-04</span><span class="hljs-string">-28</span> 00:21:45<br><span class="hljs-keyword">tags:</span><br></code></pre></td></tr></table></figure><h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>众所周知在办公的时候两台电脑之间经常倒数据资料非常麻烦，而<a href="https://so.csdn.net/so/search?q=NAS&spm=1001.2101.3001.7020">NAS</a>可以很好的解决这个问题。树莓派搭建NAS方法有很多，我们之前也拍过直接用Samba、FTP这些来实现NAS功能，但是这些需要你会在命令行进行配置，而且对于新手用起来并不直观方便对于一个NAS系统来说功能也不全，故我们这次用开源的OMV来搭建NAS系统！</p><p>目前网上普遍的OMV搭建NAS的教程都比较老了，照着做会出现各种问题，而我们本期教程是在最新<a href="https://so.csdn.net/so/search?q=%E6%A0%91%E8%8E%93%E6%B4%BE&spm=1001.2101.3001.7020">树莓派</a>官方系统上做的，大家照着做完全不会有问题，本期的精简视频教程在B站-杨坤树莓派爱好者基地中可以看到，VLOG全程记录视频可以在B站-玩派VLOG看到，欢迎大家三连～</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">视频教程地址：<br>哔哩哔哩bilibili：树莓派爱好者基地<br><br>视频VLOG记录：<br>哔哩哔哩bilibili：玩派VLOG<br></code></pre></td></tr></table></figure><h3 id="二、教程内容"><a href="#二、教程内容" class="headerlink" title="二、教程内容"></a>二、教程内容</h3><h4 id="1、树莓派安装系统"><a href="#1、树莓派安装系统" class="headerlink" title="1、树莓派安装系统"></a>1、树莓派安装系统</h4><p>这里我们用到的是最新的树莓派官方精简版系统（不能使用带桌面的版本！）<br><img src="https://img-blog.csdnimg.cn/a0c447e5795a42878cc8ba4a2e73a7f5.png#pic_center" alt="在这里插入图片描述"><br>记得点这个设置，在里面需要开启SSH、设置pi账户的密码、配置WIFI的账号和密码<br><img src="https://img-blog.csdnimg.cn/73bfb78332d542028e0328a43c21239d.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c203f7ef2f3b47b8a5de32b1bb0c3d06.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ad4b26c6828d43e68f8c08c6863cc063.png#pic_center" alt="在这里插入图片描述"></p><h4 id="2、固定静态IP"><a href="#2、固定静态IP" class="headerlink" title="2、固定静态IP"></a>2、固定静态IP</h4><p>打开路由器后台查看树莓派IP地址<br><img src="https://img-blog.csdnimg.cn/83a693306b624d7ba1f6e9581b7575e1.png#pic_center" alt="在这里插入图片描述"><br>在ssh软件中输入下面命令，配置DHCP文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/dhcpcd.conf<br></code></pre></td></tr></table></figure><p>文件中这个位置按照你自己的情况进行修改<br><img src="https://img-blog.csdnimg.cn/d0bef8afe42b4374b53959e31a4b38ab.png#pic_center" alt="在这里插入图片描述"><br>然后重启树莓派</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo reboot<br></code></pre></td></tr></table></figure><h4 id="3、换源"><a href="#3、换源" class="headerlink" title="3、换源"></a>3、换源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>把原来的注视掉，把下面的复制进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi<br>deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/53c09895c17f4c7cb8efeca0f847ea11.png#pic_center" alt="在这里插入图片描述"><br>继续</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/apt/sources.list.d/raspi.list<br></code></pre></td></tr></table></figure><p>把原来的注视掉，把下面的复制进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ bullseye main ui<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1202bdb8d5bb4bdfa9fce43102b8d54a.png#pic_center" alt="在这里插入图片描述"><br>然后记得更新一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br><br>sudo apt-get upgrade<br></code></pre></td></tr></table></figure><h4 id="4、安装OMV"><a href="#4、安装OMV" class="headerlink" title="4、安装OMV"></a>4、安装OMV</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget  https://cdn.jsdelivr.net/gh/OpenMediaVault-Plugin-Developers/installScript@master/install<br><br><span class="hljs-built_in">chmod</span> +x install<br><br>sudo ./install -n<br></code></pre></td></tr></table></figure><h4 id="5、配置OMV"><a href="#5、配置OMV" class="headerlink" title="5、配置OMV"></a>5、配置OMV</h4><p>浏览器输入树莓派IP地址就可以进入NAS系统了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">用户名默认为admin，密码为openmediavault<br></code></pre></td></tr></table></figure><p>首先在系统设置-工作台里面设置一下登出时间，之前的太短了<br><img src="https://img-blog.csdnimg.cn/cf97673e5d4f447fa0cd2791d8d89841.png#pic_center" alt="在这里插入图片描述"><br>把硬盘插在树莓派上，然后快速擦除磁盘<br><img src="https://img-blog.csdnimg.cn/efd1240bddcd4b7daec6885dcaf83583.png#pic_center" alt="在这里插入图片描述"><br>创建文件系统<br><img src="https://img-blog.csdnimg.cn/7cd6d7dd36a44237971230dc77b52de0.png#pic_center" alt="在这里插入图片描述"><br>挂载<br><img src="https://img-blog.csdnimg.cn/fbf29d5d129947bd97ced07044e483d5.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/21457ff9055d4b17860c41aa23051d06.png#pic_center" alt="在这里插入图片描述"><br>创建共享文件夹<br><img src="https://img-blog.csdnimg.cn/f02dc6e818184e06b859d7aeaaf14f6c.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c200020f4fdd49f1a98ea206d99e88d8.png#pic_center" alt="在这里插入图片描述"><br>配置SMB服务<br><img src="https://img-blog.csdnimg.cn/6a2b42ca8192423ab80368aa5302009f.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d70dd9352c114c26baafbd2728769877.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b62c395c29784c4186486bf55657b8e9.png#pic_center" alt="在这里插入图片描述"><br>配置一下一般登陆的用户pi<br><img src="https://img-blog.csdnimg.cn/88b6038682fa4f5dbed05445ec181eda.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/395f29ff69e94928ae5ed2886e4c05cc.png#pic_center" alt="在这里插入图片描述"></p><h4 id="6、开始使用"><a href="#6、开始使用" class="headerlink" title="6、开始使用"></a>6、开始使用</h4><p>WINDOWS上直接添加一个映射</p><p>本文转自 <a href="https://blog.csdn.net/qq_41676577/article/details/128063914?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170943694416800180656833%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170943694416800180656833&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-128063914-null-null.142%5Ev99%5Epc_search_result_base7&amp;utm_term=%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BAnas&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/qq_41676577/article/details/128063914?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170943694416800180656833%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170943694416800180656833&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-128063914-null-null.142^v99^pc_search_result_base7&amp;utm_term=%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BAnas&amp;spm=1018.2226.3001.4187</a>，如有侵权，请联系删除。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>时钟</title>
    <link href="/2023/04/28/%E6%97%B6%E9%92%9F/"/>
    <url>/2023/04/28/%E6%97%B6%E9%92%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="STM32-RCC"><a href="#STM32-RCC" class="headerlink" title="STM32_RCC"></a>STM32_RCC</h1><h2 id="系统原理图"><a href="#系统原理图" class="headerlink" title="系统原理图"></a>系统原理图</h2><h3 id="框图"><a href="#框图" class="headerlink" title="框图"></a>框图</h3><p>RCC ：reset clock control 复位和时钟控制器</p><p><img src="https://cdn.staticaly.com/gh/cx1269-us/picx-images-hosting@master/download.3o3xcnr893c0.webp" alt="download"></p><p>STM32共有五个时钟源，分别是HSI、HSE、LSI、LSE和PLL ，下面分别对它们进行讲解：</p><p>①、HSI是高速内部时钟，RC振荡器，频率为8MHz，精度不高。　</p><p>②、HSE是高速外部时钟，可接石英&#x2F;陶瓷谐振器，或者接外部时钟源，频率范围为4MHz~16MHz。</p><p>③、LSI是低速内部时钟，RC振荡器，频率为40kHz，提供低功耗时钟。独立看门狗的时钟源只能是 LSI ，同时LSI 还可以作为 RTC 的时钟源。④、LSE是低速外部时钟，接频率为32.768kHz的石英晶体。是主要的RTC时钟源。<br>⑤、PLL为锁相环倍频输出，其时钟输入源可选择为HSI&#x2F;2、HSE或者HSE&#x2F;2。倍频可选择为2~16倍，但是其输出频率最大不得超过72MHz。</p><p>注意：高速外部时钟HSE的引脚是OSC_OUT和OSC_IN这两个引脚芯片是独立引出的，可以接外部的晶振电路，而低速外部时钟LSE的引脚OSC32_IN和OSC32_OUT两个引脚不是独立的。</p><h3 id="时钟去向"><a href="#时钟去向" class="headerlink" title="时钟去向"></a>时钟去向</h3><blockquote><p>A   MCO 是 STM32 的一个时钟输出 IO(PA8) PA8)，它可以选择一个时钟信号输出 可以选择为 PLL 输出的 2 分频、 HSI 、 HSE 、或者 系统 时钟 。这个时钟可以用来给外部其他系统提供时钟源。</p></blockquote><blockquote><p>B   RTC 时钟源，从图上可以看出， RTC 的时钟源可以选择 LSI LSE ，以及HSE 的 128 分频。</p></blockquote><blockquote><p>C   从图中可以看出 C 处 USB 的时钟是来自 PLL 时钟源。 STM32 中有一个全速 功能的 USB 模块 ，其串行 接口 引擎需要 一个频率为 48MHz 的时钟源。该时钟源只能从 PLL 输出端获取，可以选择为 1.5 分频或者 1 分频，也就是，当需要使用 USB模块时， PLL 必须使能，并且时钟频率配置为 48MHz 72MHz。</p></blockquote><blockquote><p>D   STM32 的系统时钟 SYSCLK ，它 是供 STM32 中绝大部分部件 工作 的时钟源 。 系统时钟可选择为 PLL 输出、 HSI 或者 HSE 。系统时钟最大频率 为 72MHz当然你也可以超频，不过一般情况为了系统稳定性是没有必要冒风险去超频的。</p></blockquote><blockquote><p>E   其他所有外设。从时钟图上可以看出，其他所有外设的时钟最终来源都是 SYSCLK 。 SYSCLK 通过 AHB 分频器分频后送给各模块使用 。这些模块包括：<br>① AHB 总线、内核、内存和 DMA 使用的 HCLK 时钟。<br>② 通过 8 分频后送给 Cortex 的系统 定时器 时钟 ，也就是 systick 了 。<br>③ 直接送给 Cortex 的空闲运行时钟 FCLK 。<br>④ 送给 APB1 分频器。 APB1 分频器输出一路供 APB1 外设使用 (PCLK1 ，最大频率 36MHz)36MHz)，另一路送给定时器 (Timer)2 、 3 、 4 倍频器使用。<br>⑤送给 APB2 分频器。 APB2 分频器分频输出一路供 APB2 外设使用 (PCLK2最大频率 72MHz)72MHz)，另一 路送给定时器 (Timer)1 倍频器使用。<br>        APB1和APB2的区别： APB1上面连的是低速外设，包括电脑接口、备份接口、CAN、USB、I2C1、I2C2 、 UART2 、 UART3 等等， APB2 上面连接的是高速外设包括 UART1 、 SPI1 、 Timer1 、 ADC1 、 ADC2 、所有普通 IO 口 (PA~ 、第二功能 IO 口 等。 APB2 下面所挂的外设的时钟要比 APB1 的高 。</p></blockquote><p>在以上的时钟输出中，有很多是带使能控制的，例如 AHB 总线 时钟、内核时钟、各种 APB1外设、 APB2 外设等等。需要使用某模块时要先使能对应的时钟。</p><h1 id="STM32时钟配置"><a href="#STM32时钟配置" class="headerlink" title="STM32时钟配置"></a>STM32时钟配置</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown</title>
    <link href="/2021/04/28/Markdown/"/>
    <url>/2021/04/28/Markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h1><p>Markdown 是一种轻量级标记语言，它用简洁的语法代替排版，使我们专心于码字。它的目标是实现易读易写，成为一种适用于网络的书写语言。同时，Markdown支持嵌入<code>html</code>标签。</p><p><u>注意：Markdown使用<code>#</code>、<code>+</code>、<code>*</code>等符号来标记， 符号后面必须跟上 <strong>至少1个</strong> 空格才有效！</u></p><h1 id="Markdown的常用语法"><a href="#Markdown的常用语法" class="headerlink" title="Markdown的常用语法"></a><strong>Markdown的常用语法</strong></h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>Markdown 标题支持两种形式：</p><p><strong>1、用<code>#</code>标记</strong></p><p>在 <strong>标题开头</strong> 加上1~6个#，依次代表一级标题、二级标题….六级标题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 一级标题</span><br><span class="hljs-comment">## 二级标题</span><br><span class="hljs-comment">### 三级标题</span><br><span class="hljs-comment">##### 四级标题</span><br><span class="hljs-comment">###### 五级标题</span><br><span class="hljs-comment">###### 六级标题</span><br></code></pre></td></tr></table></figure><p><strong>2、用<code>=</code>和<code>-</code>标记</strong></p><p>在 <strong>标题底下</strong> 加上任意个<code>=</code>代表一级标题，<code>-</code>代表二级标题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">一级标题<br>======<br><br>二级标题<br>----------<br></code></pre></td></tr></table></figure><p>效果如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h5 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h5><h6 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h6><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h2><p>Markdown 支持有序列表和无序列表。</p><p><strong>无序列表使用<code>-</code>、<code>+</code>和<code>\*</code>作为列表标记：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">- Red<br>- Green<br>- Blue<br><br>* Red<br>* Green<br>* Blue<br><br>+ Red<br>+ Green<br>+ Blue<br></code></pre></td></tr></table></figure><p>效果如下：</p><ul><li>Red</li><li>Green</li><li>Blue</li></ul><p><strong>有序列表则使用数字加英文句点<code>.</code>来表示：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1. Red<br>2. Green<br>3. Blue<br></code></pre></td></tr></table></figure><p>效果如下：</p><ol><li>Red</li><li>Green</li><li>Blue</li></ol><hr><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a><strong>引用</strong></h3><p>引用以<code>&gt;</code>来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。</p><p>常见的引用写法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs csharp">&gt; 这是一段引用    <span class="hljs-comment">//在`&gt;`后面有 1 个空格</span><br>&gt; <br>&gt;     这是引用的代码块形式    <span class="hljs-comment">//在`&gt;`后面有 5 个空格</span><br>&gt;     <br>&gt; 代码例子：<br>&gt;   <br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(<span class="hljs-params">Bundle savedInstanceState</span>)</span> &#123;<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>    &#125;<br><br>&gt; 一级引用<br>&gt; &gt; 二级引用<br>&gt; &gt; &gt; 三级引用<br><br>&gt; <span class="hljs-meta">#### 这是一个四级标题</span><br>&gt; <br>&gt; <span class="hljs-number">1.</span> 这是第一行列表项<br>&gt; <span class="hljs-number">2.</span> 这是第二行列表项<br></code></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>这是一段引用</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">这是引用的代码块形式    <span class="hljs-comment">//在`&gt;`后面有 5 个空格</span><br></code></pre></td></tr></table></figure><p>代码例子：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>    <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><blockquote><h4 id="这是一个四级标题"><a href="#这是一个四级标题" class="headerlink" title="这是一个四级标题"></a>这是一个四级标题</h4><ol><li>这是第一行列表项</li><li>这是第二行列表项</li></ol><p>以下是分割线</p><hr></blockquote><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a><strong>强调</strong></h2><p>两个<code>*</code>或<code>-</code>代表加粗，一个<code>*</code>或<code>-</code>代表斜体，<code>~~</code>代表删除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">**加粗文本** 或者 __加粗文本__<br><br>*斜体文本*  或者_斜体文本_<br><br>~~删除文本~~<br></code></pre></td></tr></table></figure><p>效果如下：</p><p><strong>加粗文本</strong> 或者 <strong>加粗文本</strong></p><p><em>斜体文本</em> 或者 <em>斜体文本</em></p><p><del>删除文本</del></p><hr><h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a><strong>图片与链接</strong></h2><p>图片与链接的语法很像，区别在一个 ! 号。二者格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">图片：!<span class="hljs-selector-attr">[]</span>()    !<span class="hljs-selector-attr">[图片文本(可忽略)]</span>(图片地址)<br><br>链接：<span class="hljs-selector-attr">[]</span>()     <span class="hljs-selector-attr">[链接文本]</span>(链接地址)<br></code></pre></td></tr></table></figure><p>链接又分为<code>行内式</code>、<code>参考式</code>和 <code>自动链接</code>：</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs rust">这是行内式链接：[ConnorLin<span class="hljs-symbol">&#x27;s</span> Blog](http:<span class="hljs-comment">//connorlin.github.io)。</span><br><br>这是参考式链接：[ConnorLin<span class="hljs-symbol">&#x27;s</span> Blog][url]，其中url为链接标记，可置于文中任意位置。<br><br>[url]: http:<span class="hljs-comment">//connorlin.github.io/ &quot;ConnorLin&#x27;s Blog&quot;</span><br><br>链接标记格式为：[链接标记文本]:  链接地址  链接<span class="hljs-title function_ invoke__">title</span>(可忽略)<br><br>这是自动链接：直接使用`&lt;&gt;`括起来&lt;http:<span class="hljs-comment">//connorlin.github.io&gt;</span><br><br>这是图片：![][avatar]<br><br>[avatar]: https:<span class="hljs-comment">//connorlin.github.io/images/avatar.jpg</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p>这是行内式链接：<a href="https://link.jianshu.com/?t=http://connorlin.github.io/">ConnorLin’s Blog</a>。</p><p>这是参考式链接：<a href="https://link.jianshu.com/?t=http://connorlin.github.io/">ConnorLin’s Blog</a>，其中url为链接标记，可置于文中任意位置。</p><p>这是自动链接：直接使用<code>&lt;&gt;</code>括起来<a href="https://link.jianshu.com/?t=http://connorlin.github.io">http://connorlin.github.io</a></p><p>这是图片：</p><p><img src="https://connorlin.github.io/images/avatar.jpg" alt="img"></p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h2><p>代码分为<code>行内代码</code>和<code>代码块</code>。</p><ul><li><p>行内代码使用 <code>代码</code> 标识，可嵌入文字中</p></li><li><p>代码块使用4个空格或&#96;&#96;&#96;标识</p><p>`&#96;&#96;<br> 这里是代码<br> `&#96;&#96;</p></li><li><p>代码语法高亮在 &#96;&#96;&#96;后面加上<code>空格</code>和语言名称即可</p><p>`&#96;&#96; 语言<br> &#x2F;&#x2F;注意语言前面有空格<br> 这里是代码<br> `&#96;&#96;</p></li></ul><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">这是行内代码`onCreate(Bundle savedInstanceState)`的例子。<br><br>这是代码块和语法高亮：<br><br>``` java<br><span class="hljs-comment">// 注意java前面有空格</span><br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>    <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);<br>&#125;<br>```<br></code></pre></td></tr></table></figure><p>效果如下：</p><p>这是行内代码<code>onCreate(Bundle savedInstanceState)</code>的例子。</p><p>这是代码块和语法高亮：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 注意java前面有空格</span><br><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>    <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><strong>表格</strong></h2><p>表格对齐格式</p><ul><li>居左：<code>:----</code></li><li>居中：<code>:----:</code>或<code>-----</code></li><li>居右：<code>----:</code></li></ul><p>例子：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">|<span class="hljs-params">标题</span>|标题|<span class="hljs-params">标题</span>|<br>|<span class="hljs-params">:---</span>|<span class="hljs-symbol">:---</span><span class="hljs-symbol">:|---</span><span class="hljs-symbol">:|</span><br>|<span class="hljs-params">居左测试文本</span>|居中测试文本|<span class="hljs-params">居右测试文本</span>|<br>|<span class="hljs-params">居左测试文本1</span>|居中测试文本<span class="hljs-number">2</span>|<span class="hljs-params">居右测试文本3</span>|<br>|<span class="hljs-params">居左测试文本11</span>|居中测试文本<span class="hljs-number">22</span>|<span class="hljs-params">居右测试文本33</span>|<br>|<span class="hljs-params">居左测试文本111</span>|居中测试文本<span class="hljs-number">222</span>|<span class="hljs-params">居右测试文本333</span>|<br></code></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th align="left">标题</th><th align="center">标题</th><th align="right">标题</th></tr></thead><tbody><tr><td align="left">居左测试文本</td><td align="center">居中测试文本</td><td align="right">居右测试文本</td></tr><tr><td align="left">居左测试文本1</td><td align="center">居中测试文本2</td><td align="right">居右测试文本3</td></tr><tr><td align="left">居左测试文本11</td><td align="center">居中测试文本22</td><td align="right">居右测试文本33</td></tr><tr><td align="left">居左测试文本111</td><td align="center">居中测试文本222</td><td align="right">居右测试文本333</td></tr></tbody></table><hr><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a><strong>分隔线</strong></h2><p>在一行中用三个以上的<code>*</code>、<code>-</code>、<code>_</code>来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">***<br>---<br>___<br><br>* * *<br></code></pre></td></tr></table></figure><p>效果均为一条分割线：</p><hr><hr><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a><strong>换行</strong></h2><p>在行尾添加两个空格加回车表示换行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">这是一行后面加两个空格  换行<br></code></pre></td></tr></table></figure><p>效果如下：</p><p>这是一行后面加两个空格<br> 换行</p><hr><h2 id="脚注-注解"><a href="#脚注-注解" class="headerlink" title="脚注(注解)"></a><strong>脚注(注解)</strong></h2><p>使用<code>[^]</code>来定义脚注：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">这是一个脚注的例子<span class="hljs-selector-attr">[^1]</span><br><br><span class="hljs-selector-attr">[^1]</span>: 这里是脚注<br></code></pre></td></tr></table></figure><p>效果如下：</p><p>这是一个脚注的例子[<a href="#fn1">1]</a></p><hr><h1 id="常用弥补Markdown的Html标签"><a href="#常用弥补Markdown的Html标签" class="headerlink" title="常用弥补Markdown的Html标签"></a><strong>常用弥补Markdown的Html标签</strong></h1><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a><strong>字体</strong></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;微软雅黑&quot;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;red&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>字体及字体颜色和大小<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;#0000ff&quot;</span>&gt;</span>字体颜色<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><font face="微软雅黑" color="red" size="6">字体及字体颜色和大小</font><br> <font color="#0000ff">字体颜色</font></p><hr><h2 id="换行-1"><a href="#换行-1" class="headerlink" title="换行"></a><strong>换行</strong></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">使用html标签`<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>`<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>换行<br></code></pre></td></tr></table></figure><p>效果如下：</p><p>使用html标签<code>&lt;br/&gt;</code><br>换行</p><hr><h2 id="文本对齐方式"><a href="#文本对齐方式" class="headerlink" title="文本对齐方式"></a><strong>文本对齐方式</strong></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>居左文本<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>居中文本<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>居右文本<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p align="left">居左文本</p> <p align="center">居中文本</p> <p align="right">居右文本</p><hr><h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a><strong>下划线</strong></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span>下划线文本<span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果如下：</p><p><u>下划线文本</u></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
